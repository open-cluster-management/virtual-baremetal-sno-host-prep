

# interface of the public ip address we will use as the bridge of vms
# note is doesn't have to be real public
# as long as this interface will be reachable from the hub in both direction, we will be good
public_ip_interface: ens2f3
# ip network to connect with hub, should make sure hub & this network can reach each other
public_ip_network: 10.1.61.0/25
# prefix of the public ip network, should match public_ip_network
public_ip_network_prefix: 25
# start of vmhost's node IP address, final will be public_ip_network_node_start+offset
public_ip_network_node_start: 15 
# gateway of public ip address
public_ip_gateway: 10.1.61.126
# default dns resolver of the network, will be used to look for hub
public_ip_dns_resolver: 10.1.36.1

# bridge name will be used by vms, and we will create this bridge in the vmhost
# the public_ip_interface will be a slave of this bridge
public_bridge_name: br0

# ip addresses will be used by vm
public_ip_vm_start: 30

# starting port of bmc on each machine
vmhost_bmc_port: 9000

# domain used for sno clusters
sno_cluster_name_domain: sno-experiments.rdu2.scalelab.redhat.com

# hub config file directory, will be used on localhost
hub_config_dir: /tmp/hub-config
# vmhost configfile directory, will be used on vmhost
vmhost_config_dir: /tmp/vmhost-config

# localhost path for kubeconfig
hub_kubeconfig_path:

# dockerconfig.json file path, expect to be on localhost
pull_secret_path:

# path for ssh  keys, expect to be on localhost
ssh_private_key_path:
ssh_pulic_key_path: 

# a placeholder to make bmh happy, should be base64 encoded, will actually not be used anywhere
bmc_password_base64: 
bmc_username_base64: 

# if enabled, will add nvme disk as partition, will use ext4
enable_nvme: true
nvme_device: /dev/nvme0n1
# patch will be mounted on vm host
nvme_mount_path: /media/nvme
